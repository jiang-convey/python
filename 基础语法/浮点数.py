 # f"{value:[fill][align][sign][#][0][width][,][.precision][type]}"#浮点数格式化
# fill: 填充字符
# align: 对齐方式 <左对齐 >右对齐 ^居中
# sign: 符号 + - 空格  
# #: 进制前缀 0b 0o 0x
# 0: 数字前面补0
# width: 宽度
# ,: 千分位分隔符
# .precision: 小数点后位数
# type: 类型 b 二进制 d 十进制 o 八进制 x 十六进制 f 浮点数 % 百分比
a=3.1415926
print(f"{a:.2f}") #保留两位小数 四舍五入 输出3.14
print(f"{a:0>10.2f}") #宽度10 右对齐 前面补0 输出000003.14
print(f"{a:*>10.2f}") #宽度10 右对齐 前面补* 输出******3.14
print(f"{a:^10.2f}") #宽度10 居中 前面补空格 输出   3.14    
print(f"{a:+.2f}") #保留两位小数 四舍五入 输出+3.14
print(f"{a:-.2f}") #保留两位小数 四舍五入 输出3.14
print(f"{a: .2f}") #保留两位小数 四舍五入 输出 3.14
b=100000
print(f"{b:,}") #千分位分隔符 输出100,000   
print(f"{b:0>10,}") #宽度10 右对齐 前面补0 输出000,100,000
print(f"{b:*>10,}") #宽度10 右对齐 前面补* 输出***100,000
print(f"{b:^10,}") #宽度10 居中 前面补空格 输出 100,000
c=255
print(f"{c:#b}") #二进制 输出0b11111111
print(f"{c:#o}") #八进制 输出0o377
print(f"{c:#x}") #十六进制 输出0xff
print(f"{c:#X}") #十六进制 输出0XFF
d=0.75
print(f"{d:.2%}") #百分比 输出75.00%
print(f"{d:.0%}") #百分比 输出75%
print(f"{d:.1%}") #百分比 输出75.0%
print(f"{d:.3%}") #百分比 输出75.000%
print(f"{d:0>10.2%}") #宽度10 右对齐 前面补0 输出000075.00%
print(f"{d:*>10.2%}") #宽度10 右对齐 前面补* 输出*****75.00%
print(f"{d:^10.2%}") #宽度10 居中 前面补空格 输出  75.00%
e=1234.56789
print(f"{e:,.2f}") #千分位分隔符 保留两位小数 输出1,234.57
print(f"{e:0>15,.2f}") #宽度15 右对齐 前面补0 输出000001,234.57
print(f"{e:*>15,.2f}") #宽度15 右对齐 前面补* 输出*********1,234.57
print(f"{e:^15,.2f}") #宽度15 居中 前面补空格 输出    1,234.57