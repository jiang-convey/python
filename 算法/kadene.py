# Kadane 算法是一种基于动态规划思想的算法，用于解决最大子数组和问题。以下是具体介绍：
# 问题定义：给定一个整数数组，需要找到一个连续子数组（至少包含一个元素），使得该子数组的元素和最大，并返回这个最大和。例如，对于数组 [-2,1,-3,4,-1,2,1,-5,4]，最大子数组为 [4,-1,2,1]，其和为 6。
# 核心思想：通过维护两个关键变量来避免暴力搜索所有可能的子数组。一个是当前最大值max_current，记录以当前元素结尾的子数组能获得的最大和；另一个是全局最大值max_global，记录遍历过程中发现的所有子数组中的最大和。
# 算法步骤：
# 初始化阶段：将max_current和max_global都设为数组的第一个元素值。
# 迭代过程：从第二个元素开始遍历数组，对于每个元素，计算新的max_current值，取当前元素值本身（意味着开始新的子数组）和当前元素值加上前一个max_current（意味着扩展现有子数组）两者中的较大值。然后比较max_current与max_global，更新max_global为两者中的较大值。
# 结果输出：遍历完成后，max_global即为所求的最大子数组和。
# 复杂度分析：
# 时间复杂度：只需单次遍历数组，时间复杂度为 O (n)，n 为数组长度。
# 空间复杂度：仅需几个额外变量存储中间结果，空间复杂度为 O (1)。
# 实际应用场景：该算法可用于金融分析，寻找股票价格变化中最有利可图的买卖时段；也可用于图像处理，识别图像中最显著的特征区域；还可用于信号处理，检测信号中的显著变化点等。
# 算法变体与扩展：Kadane 算法可以扩展解决更复杂的问题，如记录最大子数组的起始和结束位置，处理环形数组的最大子数组问题，以及二维矩阵的最大子矩阵问题等。